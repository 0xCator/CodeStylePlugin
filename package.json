{
  "name": "javacodeassistant",
  "displayName": "CodeGator",
  "description": "Java Code Assistant for Visual Studio Code",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Other"
  ],
  "extensionDependencies": [
    "redhat.java"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "java",
        "aliases": [
          "Java"
        ],
        "extensions": [
          ".java"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "commands": [
      {
        "command": "javacodeassistant.format",
        "title": "Format Java Code",
        "category": "Java Code Assistant"
      },
      {
        "command": "javacodeassistant.analyze",
        "title": "Analyze Java code smells",
        "category": "Java Code Assistant"
      },
      {
        "command": "javacodeassistant.refine",
        "title": "Refine Java code",
        "category": "Java Code Assistant"
      },
      {
        "command": "javacodeassistant.exportSettings",
        "title": "Export settings to JSON file",
        "category": "Java Code Assistant"
      },
      {
        "command": "javacodeassistant.generateCompletion",
        "title": "Generate completion",
        "category": "Java Code Assistant"
      }
    ],
    "configuration": [
      {
        "title": "Miscellaneous",
        "properties": {
          "javacodeassistant.braceStyle": {
            "type": "string",
            "enum": [
              "break",
              "attach"
            ],
            "enumItemLabels": [
              "Break",
              "Attach"
            ],
            "default": "break",
            "description": "Brace style for blocks"
          },
          "javacodeassistant.spaceAroundOperators": {
            "type": "boolean",
            "default": true,
            "description": "Insert spaces around operators"
          },
          "javacodeassistant.maxLineLength": {
            "type": "number",
            "default": 100,
            "description": "Maximum line length"
          }
        }
      },
      {
        "title": "Modifier Order",
        "properties": {
          "javacodeassistant.modifierOrder.class": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "public",
                "protected",
                "private",
                "static",
                "abstract",
                "final"
              ]
            },
            "uniqueItems": true,
            "default": [
              "public",
              "protected",
              "private",
              "abstract",
              "static",
              "final"
            ],
            "description": "Order of modifiers for classes"
          },
          "javacodeassistant.modifierOrder.method": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "public",
                "protected",
                "private",
                "static",
                "abstract",
                "final",
                "synchronized",
                "transient",
                "volatile"
              ]
            },
            "uniqueItems": true,
            "default": [
              "public",
              "protected",
              "private",
              "abstract",
              "static",
              "final",
              "synchronized"
            ],
            "description": "Order of modifiers for methods"
          }
        }
      },
      {
        "title": "Naming Conventions",
        "properties": {
          "javacodeassistant.namingConventions.class": {
            "type": "string",
            "default": "pascalcase",
            "description": "Naming convention for classes (Use 'pascalcase' for PascalCase, 'camelcase' for camelCase, 'uppercase' for UPPERCASE, or a custom regex pattern)"
          },
          "javacodeassistant.namingConventions.method": {
            "type": "string",
            "default": "camelcase",
            "description": "Naming convention for methods (Use 'pascalcase' for PascalCase, 'camelcase' for camelCase, 'uppercase' for UPPERCASE, or a custom regex pattern)"
          },
          "javacodeassistant.namingConventions.variable": {
            "type": "string",
            "default": "camelcase",
            "description": "Naming convention for variables (Use 'pascalcase' for PascalCase, 'camelcase' for camelCase, 'uppercase' for UPPERCASE, or a custom regex pattern)"
          },
          "javacodeassistant.namingConventions.constant": {
            "type": "string",
            "default": "uppercase",
            "description": "Naming convention for constants (Use 'pascalcase' for PascalCase, 'camelcase' for camelCase, 'uppercase' for UPPERCASE, or a custom regex pattern)"
          },
          "javacodeassistant.namingConventions.parameter": {
            "type": "string",
            "default": "camelcase",
            "description": "Naming convention for parameters (Use 'pascalcase' for PascalCase, 'camelcase' for camelCase, 'uppercase' for UPPERCASE, or a custom regex pattern)"
          }
        }
      },
      {
        "title": "Imports",
        "properties": {
          "javacodeassistant.imports.order": {
            "type": "string",
            "enum": [
              "sort",
              "preserve"
            ],
            "enumItemLabels": [
              "Sort",
              "Preserve"
            ],
            "default": "preserve",
            "description": "Order of imports"
          },
          "javacodeassistant.imports.merge": {
            "type": "boolean",
            "default": false,
            "description": "Merge imports"
          }
        }
      },
      {
        "title": "Indentation",
        "properties": {
          "javacodeassistant.indents.size": {
            "type": "number",
            "default": 4,
            "description": "Indent size"
          },
          "javacodeassistant.indents.type": {
            "type": "string",
            "enum": [
              "spaces",
              "tabs"
            ],
            "enumItemLabels": [
              "Spaces",
              "Tabs"
            ],
            "default": "spaces",
            "description": "Indent type"
          },
          "javacodeassistant.indents.switchCaseLabels": {
            "type": "boolean",
            "default": true,
            "description": "Indent switch case labels"
          }
        }
      },
      {
        "title": "Alignments",
        "properties": {
          "javacodeassistant.aligns.afterOpenBracket": {
            "type": "string",
            "enum": [
              "none",
              "align",
              "dont_align",
              "always_break",
              "block_indent"
            ],
            "enumItemLabels": [
              "None",
              "Align",
              "Don't Align",
              "Always Break",
              "Block Indent"
            ],
            "default": "none",
            "description": "Alignment after open bracket"
          },
          "javacodeassistant.aligns.parametersBeforeAlignment": {
            "type": "number",
            "default": 2,
            "description": "Parameters before alignment (Works in *Align* and *Don't Align* modes)"
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "extensionTab",
          "title": "CodeGator",
          "icon": "resources/codegator.svg"
        }
      ]
    },
    "views": {
      "extensionTab": [
        {
          "id": "customView",
          "name": "CodeGator",
          "icon": "resources/codegator.svg"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "customView",
        "contents": "[Format Java code](command:javacodeassistant.format)\n[Analyze Java code smells](command:javacodeassistant.analyze)\n[Refine Java code](command:javacodeassistant.refine)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "javacodeassistant.exportSettings"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/pdfmake": "^0.2.11",
    "@types/vscode": "^1.98.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.21.0",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "@types/ws": "^8.5.10",
    "ajv": "^8.17.1",
    "axios": "^1.6.7",
    "pdfmake": "^0.2.20",
    "vscode-languageclient": "^9.0.1",
    "ws": "^8.16.0"
  }
}
